{"version":3,"sources":["webpack:///./src/templates/pageTemplate.js"],"names":["Template","props","pageContext","pages","blogposts","markdownRemark","data","frontmatter","html","className","map","page","key","path","href","title","dangerouslySetInnerHTML","__html","slug","includes","blogpost","pageQuery"],"mappings":"iOAGe,SAASA,EAASC,GAAQ,IAAD,EAGlCA,EADFC,YAAeC,EAFqB,EAErBA,MAAOC,EAFc,EAEdA,UAEhBC,EAAmBJ,EAAMK,KAAzBD,eACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KACrB,OACE,yBAAKC,UAAU,kBACb,6BACGN,EAAMO,KAAI,SAAAC,GACT,OACE,uBAAGC,IAAKD,EAAKE,KAAMC,KAAMH,EAAKE,MAC3BF,EAAKI,WAKd,yBAAKN,UAAU,QACb,4BAAKF,EAAYQ,OACjB,yBACEN,UAAU,eACVO,wBAAyB,CAAEC,OAAQT,KAEpCD,EAAYW,KAAKC,SAAS,UACzB,oCACE,0CACA,6BACGf,EAAUM,KAAI,SAAAU,GACb,OACE,uBAAGR,IAAKQ,EAASP,KAAMC,KAAMM,EAASP,MACnCO,EAASL,cAYvB,IAAMM,EAAS","file":"component---src-templates-page-template-js-1a9f50636eb9ff5b0675.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nexport default function Template(props) {\n  const {\n    pageContext: { pages, blogposts },\n  } = props\n  const { markdownRemark } = props.data\n  const { frontmatter, html } = markdownRemark\n  return (\n    <div className=\"page-container\">\n      <nav>\n        {pages.map(page => {\n          return (\n            <a key={page.path} href={page.path}>\n              {page.title}\n            </a>\n          )\n        })}\n      </nav>\n      <div className=\"page\">\n        <h1>{frontmatter.title}</h1>\n        <div\n          className=\"page-content\"\n          dangerouslySetInnerHTML={{ __html: html }}\n        />\n        {frontmatter.slug.includes(\"/blog\") && (\n          <>\n            <h2>Blog Posts</h2>\n            <nav>\n              {blogposts.map(blogpost => {\n                return (\n                  <a key={blogpost.path} href={blogpost.path}>\n                    {blogpost.title}\n                  </a>\n                )\n              })}\n            </nav>\n          </>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        slug\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}